@using BlogApp.Client.Blazor.Models
@using BlogApp.Client.Blazor.Services.Common
@using BlogApp.Client.Blazor.States.Category
@using System.ComponentModel.DataAnnotations

@inject CategoryState State
@inject NotificationService NotificationService
@inject IExceptionHandlerService ExceptionHandler

<EditForm Model="@State.CurrentCategory" OnValidSubmit="@Submit">
    <DataAnnotationsValidator />
    <RadzenColumn Size="12" SizeMD="6">
        <RadzenStack>
            <RadzenFieldset Text="@(State.CurrentCategory.Id == 0 ? "Kategori Ekle" : "Kategori Düzenle")">
                <RadzenStack Gap="1rem">
                    <RadzenRow AlignItems="AlignItems.Center">
                        <RadzenColumn Size="12" SizeMD="4">
                            <RadzenLabel Text="Adı" Component="Name" />
                        </RadzenColumn>
                        <RadzenColumn Size="12" SizeMD="8">
                            <RadzenTextBox Style="width: 100%;"
                                          Name="Name"
                                          @bind-Value="@State.CurrentCategory.Name"
                                          Disabled="@State.IsSubmitting" />
                            <ValidationMessage For="@(() => State.CurrentCategory.Name)" 
                                            class="rz-text-danger d-block mt-1"/>
                        </RadzenColumn>
                    </RadzenRow>
                </RadzenStack>
            </RadzenFieldset>
        </RadzenStack>
    </RadzenColumn>
    <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Center" Gap="1rem" class="rz-mt-8 rz-mb-4">
        <RadzenButton ButtonType="ButtonType.Submit"
                     Size="ButtonSize.Large"
                     Icon="save"
                     Text="Kaydet"
                     Disabled="@State.IsSubmitting"
                     IsBusy="@State.IsSubmitting"
                     BusyText="Kaydediliyor..." />
        <RadzenButton ButtonStyle="ButtonStyle.Light"
                     Variant="Variant.Flat"
                     Size="ButtonSize.Large"
                     Icon="cancel"
                     Text="İptal"
                     Disabled="@State.IsSubmitting"
                     Click="@OnCancel" />
    </RadzenStack>
</EditForm>

@code {
    [Parameter]
    public EventCallback OnSaved { get; set; }

    [Parameter]
    public EventCallback OnCancel { get; set; }

    private async Task Submit()
    {
        try
        {
            await State.SaveCategoryAsync();

            string message = State.CurrentCategory.Id == 0
                ? "Kategori başarıyla eklendi."
                : "Kategori başarıyla güncellendi.";

            NotificationService.Notify(NotificationSeverity.Success, "Başarılı", message);
            State.ResetCurrentCategory();
            await OnSaved.InvokeAsync();
        }
        catch (Exception ex)
        {
            await ExceptionHandler.HandleExceptionAsync(ex, NotificationService);
        }
    }
}